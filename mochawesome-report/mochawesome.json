{
  "stats": {
    "suites": 5,
    "tests": 15,
    "passes": 15,
    "pending": 0,
    "failures": 0,
    "start": "2023-08-23T20:27:25.587Z",
    "end": "2023-08-23T20:27:29.399Z",
    "duration": 3812,
    "testsRegistered": 15,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "ac95d41d-256b-4b37-a1bb-2d625c7dc5e0",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 1174,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "newUser = await createUser()",
          "err": {},
          "uuid": "0ca24b88-4848-44f2-aac9-03dcd5c37b9b",
          "parentUUID": "ac95d41d-256b-4b37-a1bb-2d625c7dc5e0",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 148,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "newUser = await createUser()",
          "err": {},
          "uuid": "0bf845d3-531e-4f03-a5d6-c3dd3e4e942b",
          "parentUUID": "ac95d41d-256b-4b37-a1bb-2d625c7dc5e0",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 150,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "newUser = await createUser()",
          "err": {},
          "uuid": "f0b5eff3-d905-4172-a072-ced8de238992",
          "parentUUID": "ac95d41d-256b-4b37-a1bb-2d625c7dc5e0",
          "isHook": true,
          "skipped": false
        },
        {
          "title": "\"before all\" hook in \"{root}\"",
          "fullTitle": "\"before all\" hook in \"{root}\"",
          "timedOut": false,
          "duration": 134,
          "state": null,
          "speed": null,
          "pass": false,
          "fail": false,
          "pending": false,
          "context": null,
          "code": "newUser = await createUser()",
          "err": {},
          "uuid": "6bc23672-9f0b-4682-941a-883e0919e93a",
          "parentUUID": "ac95d41d-256b-4b37-a1bb-2d625c7dc5e0",
          "isHook": true,
          "skipped": false
        }
      ],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "74f8f899-b323-498f-9378-c0d5f17d63f3",
          "title": "Create User Information",
          "fullFile": "C:\\Users\\user\\Desktop\\nodejs-REST-API\\final-api\\test-mocha-chai\\test\\create_user.test.js",
          "file": "\\test\\create_user.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Create A User",
              "fullTitle": "Create User Information Create A User",
              "timedOut": false,
              "duration": 171,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\n    name: \"Collins Juma\",\n    email: \"collins@gmail.com\",\n    age: 25,\n}\nconst response = await axios.post(API_URL + '/user', payload)\nexpect(response.status).to.be.equal(201)\nexpect(response.data).to.be.an(\"object\")",
              "err": {},
              "uuid": "989824d9-61ee-4b8d-9658-577cb671a644",
              "parentUUID": "74f8f899-b323-498f-9378-c0d5f17d63f3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create A User without adding name",
              "fullTitle": "Create User Information Create A User without adding name",
              "timedOut": false,
              "duration": 39,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try{\n    const payload = {\n        email: \"collins@gmail.com\",\n        age: 25,\n    }\n    const response = await axios.post(API_URL + '/user', payload)\n    expect(response.status).to.be.equal(201)\n    expect(response.data).to.be.an(\"object\")\n} catch (error) {\n    if(error.response){\n        expect(error.response.status).not.to.be.equal(201)\n    } else {\n        throw error\n    }\n}",
              "err": {},
              "uuid": "8e6af167-662c-4198-9fcc-893e50398f84",
              "parentUUID": "74f8f899-b323-498f-9378-c0d5f17d63f3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create A User without adding email",
              "fullTitle": "Create User Information Create A User without adding email",
              "timedOut": false,
              "duration": 19,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try{\n    const payload = {\n        name: \"Collins Juma\",\n        age: 25,\n    }\n    const response = await axios.post(API_URL + '/user', payload)\n    expect(response.status).to.be.equal(201)\n    expect(response.data).to.be.an(\"object\")\n} catch (error) {\n    if(error.response){\n        expect(error.response.status).not.to.be.equal(201)\n    } else {\n        throw error\n    }\n}",
              "err": {},
              "uuid": "a6b10694-b8b6-41b6-9935-91cf070a5aa1",
              "parentUUID": "74f8f899-b323-498f-9378-c0d5f17d63f3",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Create A User without adding age",
              "fullTitle": "Create User Information Create A User without adding age",
              "timedOut": false,
              "duration": 23,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try{\n    const payload = {\n        name: \"Collins Juma\",\n        email: \"collins@gmail.com\"\n    }\n    const response = await axios.post(API_URL + '/user', payload)\n    expect(response.status).to.be.equal(201)\n    expect(response.data).to.be.an(\"object\")\n} catch (error) {\n    if(error.response){\n        expect(error.response.status).not.to.be.equal(201)\n    } else {\n        throw error\n    }\n}",
              "err": {},
              "uuid": "63b7e4d8-93fe-4398-a00a-0c9903aa347e",
              "parentUUID": "74f8f899-b323-498f-9378-c0d5f17d63f3",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "989824d9-61ee-4b8d-9658-577cb671a644",
            "8e6af167-662c-4198-9fcc-893e50398f84",
            "a6b10694-b8b6-41b6-9935-91cf070a5aa1",
            "63b7e4d8-93fe-4398-a00a-0c9903aa347e"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 252,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "bbcff21b-7b0c-4f0b-93ae-67eb375fd277",
          "title": "Delete User Information",
          "fullFile": "C:\\Users\\user\\Desktop\\nodejs-REST-API\\final-api\\test-mocha-chai\\test\\delete_user.test.js",
          "file": "\\test\\delete_user.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Delete A User",
              "fullTitle": "Delete User Information Delete A User",
              "timedOut": false,
              "duration": 303,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.delete(API_URL + '/user/' + newUser._id)\nexpect(response.status).to.be.equal(200)\nexpect(response.data).to.be.an(\"object\")",
              "err": {},
              "uuid": "8695e1b2-1e27-4d95-80ee-a3757881ddf6",
              "parentUUID": "bbcff21b-7b0c-4f0b-93ae-67eb375fd277",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "8695e1b2-1e27-4d95-80ee-a3757881ddf6"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 303,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "76d7bfea-22a4-41cd-9bc4-d7bc658b23be",
          "title": "Get User Information",
          "fullFile": "C:\\Users\\user\\Desktop\\nodejs-REST-API\\final-api\\test-mocha-chai\\test\\get_user.test.js",
          "file": "\\test\\get_user.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get A User",
              "fullTitle": "Get User Information Get A User",
              "timedOut": false,
              "duration": 148,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.get(API_URL + '/user/' + newUser._id)\nexpect(response.status).to.be.equal(200)\nexpect(response.data).to.be.an(\"object\")",
              "err": {},
              "uuid": "4aa9c9d4-0359-40e8-a444-d6b5168757f0",
              "parentUUID": "76d7bfea-22a4-41cd-9bc4-d7bc658b23be",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should have all the properties for each user",
              "fullTitle": "Get User Information should have all the properties for each user",
              "timedOut": false,
              "duration": 165,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.get(API_URL + '/user/' + newUser._id)\nconsole.log(response.data)\nexpect(response.data.name).to.be.equal('Test Juma')\nexpect(response.data.email).to.be.equal('test@gmail.com')\nexpect(response.data.age).to.be.equal(25)\nresponse.data.should.have.property('name')\nresponse.data.should.have.property('email')\nresponse.data.should.have.property('age')\nexpect(response.status).to.be.equal(200)\nexpect(response.data).to.be.an(\"object\")",
              "err": {},
              "uuid": "29864c43-94cd-4ec2-a26b-457b7dc6ebfa",
              "parentUUID": "76d7bfea-22a4-41cd-9bc4-d7bc658b23be",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "4aa9c9d4-0359-40e8-a444-d6b5168757f0",
            "29864c43-94cd-4ec2-a26b-457b7dc6ebfa"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 313,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "9090ad66-0b24-4236-9ac5-c97c762545f0",
          "title": "Get Users Information",
          "fullFile": "C:\\Users\\user\\Desktop\\nodejs-REST-API\\final-api\\test-mocha-chai\\test\\get_users.test.js",
          "file": "\\test\\get_users.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Get All Users List",
              "fullTitle": "Get Users Information Get All Users List",
              "timedOut": false,
              "duration": 181,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const response = await axios.get(API_URL + '/users')\nexpect(response.status).to.be.equal(200)\nexpect(response.data).to.be.an(\"array\")",
              "err": {},
              "uuid": "a32a4765-2120-43f5-8216-f1b7ff33f739",
              "parentUUID": "9090ad66-0b24-4236-9ac5-c97c762545f0",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "a32a4765-2120-43f5-8216-f1b7ff33f739"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 181,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "e91a7590-5556-4566-a8c5-cd8d0d65cce2",
          "title": "Update User Information",
          "fullFile": "C:\\Users\\user\\Desktop\\nodejs-REST-API\\final-api\\test-mocha-chai\\test\\update_user.test.js",
          "file": "\\test\\update_user.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Update A User",
              "fullTitle": "Update User Information Update A User",
              "timedOut": false,
              "duration": 169,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\n    name: \"John Doe\",\n    email: \"doe@gmail.com\",\n    age: 28,\n}\nconst response = await axios.put(API_URL + '/user/' + newUser._id, payload)\nexpect(response.status).to.be.equal(200)\nexpect(response.data).to.be.an(\"object\")",
              "err": {},
              "uuid": "0232cd19-ace6-4806-bcd0-21cbbe593b5d",
              "parentUUID": "e91a7590-5556-4566-a8c5-cd8d0d65cce2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update A User's name",
              "fullTitle": "Update User Information Update A User's name",
              "timedOut": false,
              "duration": 169,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\n    name: \"Jane Doe\",\n}\nconst response = await axios.put(API_URL + '/user/' + newUser._id, payload)\nexpect(response.status).to.be.equal(200)\nexpect(response.data).to.be.an(\"object\")",
              "err": {},
              "uuid": "51acc292-76f2-4d52-a60c-52a5e0fcd0de",
              "parentUUID": "e91a7590-5556-4566-a8c5-cd8d0d65cce2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update A User's email",
              "fullTitle": "Update User Information Update A User's email",
              "timedOut": false,
              "duration": 130,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\n    email: \"janeDoe@gmail.com\",\n}\nconst response = await axios.put(API_URL + '/user/' + newUser._id, payload)\nexpect(response.status).to.be.equal(200)\nexpect(response.data).to.be.an(\"object\")",
              "err": {},
              "uuid": "793bdefb-692a-4fb8-a99b-c0a5a7793bd1",
              "parentUUID": "e91a7590-5556-4566-a8c5-cd8d0d65cce2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update A User's age",
              "fullTitle": "Update User Information Update A User's age",
              "timedOut": false,
              "duration": 147,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\n    age: 20,\n}\nconst response = await axios.put(API_URL + '/user/' + newUser._id, payload)\nexpect(response.status).to.be.equal(200)\nexpect(response.data).to.be.an(\"object\")",
              "err": {},
              "uuid": "8bf1bcfc-40f3-43ca-8ee7-5f3b20c14e37",
              "parentUUID": "e91a7590-5556-4566-a8c5-cd8d0d65cce2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update A User with wrong user ID",
              "fullTitle": "Update User Information Update A User with wrong user ID",
              "timedOut": false,
              "duration": 50,
              "state": "passed",
              "speed": "medium",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try{\n    const payload = {\n        name: \"John  to new user Doe\",\n        email: \"doe@gmail.com\",\n        age: 28,\n    }\n    const response = await axios.put(API_URL + '/user/' + 899393, payload)\n    expect(response.status).to.be.equal(200)\n    expect(response.data).to.be.an(\"object\")\n} catch (error) {\n  if(error.response) {\n      expect(error.response.status).not.to.be.equal(200)\n  } else {\n      throw error\n  }\n}",
              "err": {},
              "uuid": "45b78586-ecac-4eb9-b96b-ae70a630dca1",
              "parentUUID": "e91a7590-5556-4566-a8c5-cd8d0d65cce2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update A User with new email",
              "fullTitle": "Update User Information Update A User with new email",
              "timedOut": false,
              "duration": 161,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\n    email: \"janeDoe@gmail.com\",\n}\nconst response = await axios.put(API_URL + '/user/' + newUser._id, payload)\nexpect(response.status).to.be.equal(200)\nconsole.log(response.data.email)\nexpect(response.data.email).not.to.be.equal(\"janehDoe@gmail.com\")\nexpect(response.data).to.be.an(\"object\")",
              "err": {},
              "uuid": "fafb5b33-780f-43ec-983b-8adc46886f6a",
              "parentUUID": "e91a7590-5556-4566-a8c5-cd8d0d65cce2",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Update A User with new age",
              "fullTitle": "Update User Information Update A User with new age",
              "timedOut": false,
              "duration": 161,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "const payload = {\n    age: 28,\n}\nconst response = await axios.put(API_URL + '/user/' + newUser._id, payload)\nexpect(response.status).to.be.equal(200)\nconsole.log(response.data.age)\nexpect(response.data.age).not.to.be.equal(29)\nexpect(response.data).to.be.an(\"object\")",
              "err": {},
              "uuid": "8b978167-10bb-4a98-9aa5-ae4d5351af5f",
              "parentUUID": "e91a7590-5556-4566-a8c5-cd8d0d65cce2",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "0232cd19-ace6-4806-bcd0-21cbbe593b5d",
            "51acc292-76f2-4d52-a60c-52a5e0fcd0de",
            "793bdefb-692a-4fb8-a99b-c0a5a7793bd1",
            "8bf1bcfc-40f3-43ca-8ee7-5f3b20c14e37",
            "45b78586-ecac-4eb9-b96b-ae70a630dca1",
            "fafb5b33-780f-43ec-983b-8adc46886f6a",
            "8b978167-10bb-4a98-9aa5-ae4d5351af5f"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 987,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "10.2.0"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": null,
      "version": "6.2.0"
    }
  }
}